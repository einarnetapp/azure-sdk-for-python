# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import DiagnosticSettingsCategoryResource
from ._models_py3 import DiagnosticSettingsCategoryResourceCollection
from ._models_py3 import DiagnosticSettingsResource
from ._models_py3 import DiagnosticSettingsResourceCollection
from ._models_py3 import ErrorAdditionalInfo
from ._models_py3 import ErrorDetail
from ._models_py3 import ErrorResponse
from ._models_py3 import LogSettings
from ._models_py3 import Operation
from ._models_py3 import OperationDisplay
from ._models_py3 import OperationListResult
from ._models_py3 import ProxyResource
from ._models_py3 import Resource
from ._models_py3 import RetentionPolicy
from ._models_py3 import SystemData

from ._aadcustomsecurityattributesdiagnosticsettings_enums import ActionType
from ._aadcustomsecurityattributesdiagnosticsettings_enums import Category
from ._aadcustomsecurityattributesdiagnosticsettings_enums import CategoryType
from ._aadcustomsecurityattributesdiagnosticsettings_enums import CreatedByType
from ._aadcustomsecurityattributesdiagnosticsettings_enums import Origin
from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "DiagnosticSettingsCategoryResource",
    "DiagnosticSettingsCategoryResourceCollection",
    "DiagnosticSettingsResource",
    "DiagnosticSettingsResourceCollection",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "LogSettings",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "ProxyResource",
    "Resource",
    "RetentionPolicy",
    "SystemData",
    "ActionType",
    "Category",
    "CategoryType",
    "CreatedByType",
    "Origin",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()

# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._operations import Operations
from ._sql_managed_instances_operations import SqlManagedInstancesOperations
from ._failover_groups_operations import FailoverGroupsOperations
from ._sql_server_instances_operations import SqlServerInstancesOperations
from ._sql_availability_groups_operations import SqlAvailabilityGroupsOperations
from ._data_controllers_operations import DataControllersOperations
from ._active_directory_connectors_operations import ActiveDirectoryConnectorsOperations
from ._postgres_instances_operations import PostgresInstancesOperations
from ._sql_server_databases_operations import SqlServerDatabasesOperations
from ._sql_server_availability_groups_operations import SqlServerAvailabilityGroupsOperations
from ._sql_availability_group_replicas_operations import SqlAvailabilityGroupReplicasOperations
from ._sql_availability_group_databases_operations import SqlAvailabilityGroupDatabasesOperations

from ._patch import __all__ as _patch_all
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "Operations",
    "SqlManagedInstancesOperations",
    "FailoverGroupsOperations",
    "SqlServerInstancesOperations",
    "SqlAvailabilityGroupsOperations",
    "DataControllersOperations",
    "ActiveDirectoryConnectorsOperations",
    "PostgresInstancesOperations",
    "SqlServerDatabasesOperations",
    "SqlServerAvailabilityGroupsOperations",
    "SqlAvailabilityGroupReplicasOperations",
    "SqlAvailabilityGroupDatabasesOperations",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
